---
name: "Test Zpmod Module"
description: "Comprehensive testing of zpmod module functionality"
inputs:
  module-name:
    description: "Name of the module to test"
    required: false
    default: "zpmod"
  test-scripts-path:
    description: "Path to test scripts"
    required: false
    default: "test_files"
  create-test-files:
    description: "Whether to create default test files"
    required: false
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Create test files
      if: inputs.create-test-files == 'true'
      shell: bash
      run: |
        mkdir -p ${{ inputs.test-scripts-path }}

        # Create test Zsh scripts
        cat > ${{ inputs.test-scripts-path }}/test1.zsh << 'EOF'
        #!/usr/bin/env zsh
        # Test script 1 for zpmod compilation
        echo "Test script 1 executing on $RUNNER_OS"
        for i in {1..3}; do
          echo "Loop iteration: $i"
        done
        EOF

        cat > ${{ inputs.test-scripts-path }}/test2.zsh << 'EOF'
        #!/usr/bin/env zsh
        # Test script 2 for zpmod compilation
        function test_function() {
          echo "Test function called with args: $@"
        }
        test_function "hello" "$RUNNER_OS"
        EOF

        chmod +x ${{ inputs.test-scripts-path }}/*.zsh
        echo "✅ Test files created"

    - name: Load and verify module
      shell: zsh {0}
      run: |
        module_path+=( "$PWD/Src" )
        if zmodload zi/${{ inputs.module-name }}; then
          echo "✅ Module ${{ inputs.module-name }} loaded successfully"
        else
          echo "❌ Failed to load module ${{ inputs.module-name }}"
          exit 1
        fi

    - name: Test module functionality
      shell: zsh {0}
      run: |
        module_path+=( "$PWD/Src" )
        zmodload zi/${{ inputs.module-name }}

        echo "=== Testing ${{ inputs.module-name }} functionality ==="

        # Test source-study
        if ${{ inputs.module-name }} source-study -l; then
          echo "✅ source-study works"
        else
          echo "❌ source-study failed"
          exit 1
        fi

        # Test path cache
        if ${{ inputs.module-name }} clear-path-cache; then
          echo "✅ Path cache operations work"
        else
          echo "❌ Path cache operations failed"
          exit 1
        fi

        # Test compilation config
        if ${{ inputs.module-name }} compile-config; then
          echo "✅ Compilation config works"
        else
          echo "❌ Compilation config failed"
          exit 1
        fi

    - name: Test script compilation
      shell: zsh {0}
      run: |
        module_path+=( "$PWD/Src" )
        zmodload zi/${{ inputs.module-name }}

        echo "=== Testing script compilation ==="

        # Enable compilation and test scripts
        ${{ inputs.module-name }} compile-config enable

        for script in ${{ inputs.test-scripts-path }}/*.zsh; do
          echo "Testing script: $script"
          if source "$script"; then
            echo "✅ Successfully sourced $script"
          else
            echo "❌ Failed to source $script"
            exit 1
          fi
        done

    - name: Final verification
      shell: zsh {0}
      run: |
        module_path+=( "$PWD/Src" )
        zmodload zi/${{ inputs.module-name }}

        echo "=== Final verification ==="

        # Generate final performance report
        if ${{ inputs.module-name }} source-study; then
          echo "✅ All ${{ inputs.module-name }} functionality tests completed successfully"
        else
          echo "❌ Final verification failed"
          exit 1
        fi
